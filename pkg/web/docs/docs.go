// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "ISDuBA team",
            "url": "https://github.com/ISDuBA/ISDuBA",
            "email": "info@intevation.de"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/documents": {
            "post": {
                "description": "Upload endpoint for CSAF documents.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Imports a CSAF document.",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "403": {
                        "description": "False TLP or publisher",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "409": {
                        "description": "Already in database",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/documents/{id}": {
            "delete": {
                "description": "Delete endpoint for CSAF documents.",
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a CSAF document.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ID"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/sources/attention": {
            "get": {
                "description": "All sources that had a change and should be reviewed are returned.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns a list of sources that need attention.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Return all sources",
                        "name": "all",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/web.attentionSources.attention"
                            }
                        }
                    },
                    "400": {
                        "description": "could not parse all",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/sources/default": {
            "get": {
                "description": "Returns the default parameters for the source configuration.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the default configuration.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.defaultSourceConfig.sourceConfig"
                        }
                    }
                }
            }
        },
        "/sources/feeds/keep": {
            "get": {
                "description": "Returns the time it takes until old feed entries are deleted.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns how long feed logs are kept.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.keepFeedTime.keepFeedTimeConfig"
                        }
                    }
                }
            }
        },
        "/sources/feeds/log": {
            "get": {
                "description": "Updates a feed with the specified configuration.",
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a feed.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.feedLogs.feedLogEntries"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/sources/feeds/{id}": {
            "put": {
                "description": "Updates a feed with the specified configuration.",
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a feed.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feed ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Success"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/sources/feeds/{id}/log": {
            "get": {
                "description": "Updates a feed with the specified configuration.",
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a feed.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feed ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.feedLogs.feedLogEntries"
                        }
                    },
                    "400": {
                        "description": "could not parse id",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/sources/{id}": {
            "get": {
                "description": "Returns the source configuration and metadata.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get source information.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Source ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Enable statistic",
                        "name": "stats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Success"
                        }
                    },
                    "400": {
                        "description": "could not parse stats",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the source configuration.",
                "produces": [
                    "application/json"
                ],
                "summary": "Updates source configuration.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Source ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Success"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the source configuration with the specified id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a source.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Source ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "source deleted",
                        "schema": {
                            "$ref": "#/definitions/models.Success"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/sources/{id}/feeds": {
            "get": {
                "description": "Returns all feed configurations and metadata.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns feeds.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feed ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Enable statistic",
                        "name": "stats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.feedResult"
                        }
                    },
                    "400": {
                        "description": "could not parse stats",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a feed with the specified configuration.",
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a feed.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Source ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Enable statistic",
                        "name": "stats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ID"
                            }
                        }
                    },
                    "400": {
                        "description": "could not parse stats",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.FeedLogLevel": {
            "type": "integer",
            "enum": [
                1,
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "defaultSourcesFeedLogLevel",
                "DebugFeedLogLevel",
                "InfoFeedLogLevel",
                "WarnFeedLogLevel",
                "ErrorFeedLogLevel"
            ]
        },
        "models.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "models.ID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Success": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "sources.Stats": {
            "type": "object",
            "properties": {
                "downloading": {
                    "type": "integer"
                },
                "waiting": {
                    "type": "integer"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        },
        "web.attentionSources.attention": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "web.defaultSourceConfig.sourceConfig": {
            "type": "object",
            "properties": {
                "age": {
                    "$ref": "#/definitions/web.sourceAge"
                },
                "log_level": {
                    "$ref": "#/definitions/config.FeedLogLevel"
                },
                "rate": {
                    "type": "number"
                },
                "secure": {
                    "type": "boolean"
                },
                "signature_check": {
                    "type": "boolean"
                },
                "slots": {
                    "type": "integer"
                },
                "strict_mode": {
                    "type": "boolean"
                }
            }
        },
        "web.feed": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "log_level": {
                    "$ref": "#/definitions/config.FeedLogLevel"
                },
                "rolie": {
                    "type": "boolean"
                },
                "stats": {
                    "$ref": "#/definitions/sources.Stats"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "web.feedLogs.entry": {
            "type": "object",
            "properties": {
                "feed_id": {
                    "type": "integer"
                },
                "level": {
                    "$ref": "#/definitions/config.FeedLogLevel"
                },
                "msg": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "web.feedLogs.feedLogEntries": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.feedLogs.entry"
                    }
                }
            }
        },
        "web.feedResult": {
            "type": "object",
            "properties": {
                "feeds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/web.feed"
                    }
                }
            }
        },
        "web.keepFeedTime.keepFeedTimeConfig": {
            "type": "object",
            "properties": {
                "keep_feed_time": {
                    "$ref": "#/definitions/time.Duration"
                }
            }
        },
        "web.sourceAge": {
            "type": "object",
            "properties": {
                "time.Duration": {
                    "type": "integer",
                    "enum": [
                        1,
                        1000,
                        1000000,
                        1000000000,
                        60000000000,
                        1,
                        1000,
                        1000000,
                        1000000000,
                        60000000000,
                        3600000000000
                    ],
                    "x-enum-varnames": [
                        "Nanosecond",
                        "Microsecond",
                        "Millisecond",
                        "Second",
                        "Minute",
                        "Nanosecond",
                        "Microsecond",
                        "Millisecond",
                        "Second",
                        "Minute",
                        "Hour"
                    ]
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "ISDuBA API",
	Description:      "This is the ISDuBA API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
